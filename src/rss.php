<?php
    require_once("utils_db.php");
    require_once("utils_common.php");
    require_once("utils_display.php");
    require_once("utils_debug.php");
    require_once("utils_pairing.php");
    require_once("utils_standings.php");

    $id = $_GET['id'];
    if ((! $id) || (! tournament_ispublic($id)))
        header("location:/");

    header("Content-type: text/xml");

    echo '<?xml version="1.0" encoding="utf-8" ?>';
?>

<rss 
    xmlns:polo="http://seattleswiss.com/rss/poloModule/"
    version="2.0">

    <channel>
        <title><? echo get_tournament_name($id); ?></title>
        <link>http://seattleswiss.com/view.php?id=<? echo $id; ?></link>
        <description>results automatically generated by Two Oh Swiss</description>
        <lastBuildDate><? echo date("D, d M Y H:i:s T", time()) ?></lastBuildDate>
        <language>en-us</language>

<?php  //ASSERT: ispublic($id)

function disp_team($team, $s, $r) {
    echo "<polo:team>\n";
    $out = array( "uid" => $team['team_uid'], 
                  "name" => $team['team_name'], 
                  "result" => $r );
    if ($team['team_text']) { $out["comment"] = $team['team_text']; }
    if ($s > -1)            { $out["score"]   = $s; }
    foreach ($out as $key => $val) {
        echo "<polo:$key>$val</polo:$key>\n";
    }
    echo "</polo:team>\n";
}

function disp_item($scores, $teams) {
    echo "<item>\n";
    if (count($scores) == 1) {
        echo "<title>{$teams[$scores[0]['team_id']]['team_name']} gets a bye</title>\n";
        disp_team($teams[$scores[0]['team_id']], -1, 1);
    }
    // result should be derived in some more clever way
    elseif (count($scores) > 1) {
        $team_names = array_map(function ($t) use ($teams) { return $teams[$t['team_id']]['team_name']; }, $scores);
        echo "<title>".implode($team_names, " vs ")."</title>\n";
        $max = max(array_map(function ($s) { return $s['score']; }, $scores));
        $scale = count(array_filter($scores, function ($s) use ($max) { return $s['score'] == $max; }));
        //count(array_filter($scores, function ($s) { return ($s['score'] == $max); }));
        foreach($scores as $s)
            disp_team($teams[$s['team_id']], $s['score'], ($s['score'] == $max) ? (1/$scale) : 0);
    }
    //<guid isPermaLink="false">1309792342</guid>
    //<pubDate>Thu, 03 May 2012 14:03:22 PDT</pubDate>
    //<description>team a wins against team b, 5-0</description>
    echo "</item>\n";
}

    $db = connect_to_db();

    $teams= array();
    $tlist = sql_select_all("SELECT * FROM tblTeam WHERE tournament_id = :tid", array(":tid" => $id));
    if ($tlist)
        foreach ($tlist as $t) {
            foreach ($t as $k => $v)
                $t[$k] = htmlentities($v);
            $teams[$t['team_id']] = $t;
        }

    $rounds = sql_select_all("SELECT * FROM tblRound WHERE tournament_id = :tid ORDER BY round_number DESC", array(":tid" => $id), $db);
    if ($rounds)
        foreach ($rounds as $r) {
            $games = sql_select_all("SELECT * FROM tblGame WHERE round_id = :rid ORDER BY game_id DESC", array(":rid" => $r['round_id']), $db);
            if ($games) 
                foreach ($games as $g) {
                    $scores = sql_select_all("SELECT * FROM tblGameTeams WHERE game_id = :gid", array(":gid" => $g['game_id']), $db);
                    if (count($scores) == count(array_filter( $scores, function ($t) { return ($t['score'] > -1); } )))
                        disp_item($scores, $teams);
                }
        }
?>
    </channel>
</rss>
